# -*- coding: utf-8 -*-

"""
    flowroutenumbersandmessaging.models.attributes_62

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class Attributes62(object):

    """Implementation of the 'Attributes62' model.

    TODO: type model description here.

    Attributes:
        alias (string): TODO: type description here.
        route_type (RouteTypeEnum): TODO: type description here.
        value (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "alias" : "alias",
        "route_type" : "route_type",
        "value" : "value"
    }

    def __init__(self,
                 alias=None,
                 route_type='sip-reg',
                 value=None):
        """Constructor for the Attributes62 class"""

        # Initialize members of the class
        self.alias = alias
        self.route_type = route_type
        self.value = value


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        alias = dictionary.get("alias")
        route_type = dictionary.get("route_type") if dictionary.get("route_type") else 'sip-reg'
        value = dictionary.get("value")

        # Return an object of this model
        return cls(alias,
                   route_type,
                   value)


