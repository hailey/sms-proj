# -*- coding: utf-8 -*-

"""
    flowroutenumbersandmessaging.models.data_61

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
import flowroutenumbersandmessaging.models.attributes_62

class Data61(object):

    """Implementation of the 'Data61' model.

    TODO: type model description here.

    Attributes:
        mtype (string): TODO: type description here.
        attributes (Attributes62): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype" : "type",
        "attributes" : "attributes"
    }

    def __init__(self,
                 mtype='route',
                 attributes=None):
        """Constructor for the Data61 class"""

        # Initialize members of the class
        self.mtype = mtype
        self.attributes = attributes


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type") if dictionary.get("type") else 'route'
        attributes = flowroutenumbersandmessaging.models.attributes_62.Attributes62.from_dictionary(dictionary.get("attributes")) if dictionary.get("attributes") else None

        # Return an object of this model
        return cls(mtype,
                   attributes)


